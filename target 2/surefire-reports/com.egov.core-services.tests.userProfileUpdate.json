[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":581699,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:15.092 karate.env:  \n15:37:15.092 locale: en_IN \n15:37:15.092 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":148282234,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:15.245 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1297007,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":8775,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":13722,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":7345,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":57488,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":51835,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6058,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":5954,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":122657271,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":346278,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:15.241 status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":18,"name":"To verify user profile data is updating correctly","description":"","id":"to-verify-user-profile-data-is-updating-correctly","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":20},{"name":"set profilePayload.user.name = username","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":22},{"name":"set profilePayload.user.emailId = email","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":24},{"name":"set profilePayload.user.correspondenceCity = city","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":26},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@updateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":28},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":30},{"name":"assert hrmsResponseBody.Employees[0].user.name == username","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":32},{"name":"assert hrmsResponseBody.Employees[0].user.emailId == email","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":34},{"name":"assert hrmsResponseBody.Employees[0].user.correspondenceCity == city","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":36}],"tags":[{"name":"@User_Update_ValidDataWithNameEmailCity_01","line":17},{"name":"@coreServices","line":17},{"name":"@regression","line":17},{"name":"@positive","line":17},{"name":"@updateProfile","line":17},{"name":"@eGovUser","line":17}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":1113998,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:15.254 karate.env:  \n15:37:15.254 locale: en_IN \n15:37:15.254 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":135880679,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:15.395 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":3005629,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":10637,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":14364,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":7765,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":67450,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":53279,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6724,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":11332,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":122014371,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":228256,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:15.394 status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":39,"name":"Update existing user profile with all valid parameters","description":"","id":"update-existing-user-profile-with-all-valid-parameters","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":41},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@updateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":43},{"name":"assert hrmsResponseBody.Employees.size() > 0","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":45}],"tags":[{"name":"@User_Update_ValidDataWithAlltheParameters_02","line":38},{"name":"@coreServices","line":38},{"name":"@regression","line":38},{"name":"@positive","line":38},{"name":"@updateProfile","line":38},{"name":"@eGovUser","line":38}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":1459486,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:15.401 karate.env:  \n15:37:15.401 locale: en_IN \n15:37:15.401 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":174311775,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 158, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:15.587 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 158, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1266204,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":32667,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":17036,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":4706,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":73836,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":36756,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":4180,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":3839,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":160703196,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":263825,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 158, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:15.587 status code was: 400, expected: 200, response time: 158, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":48,"name":"To verify the error message returned by API when an invalid username is passed","description":"","id":"to-verify-the-error-message-returned-by-api-when-an-invalid-username-is-passed","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":50},{"name":"set profilePayload.user.name = username+'@automation!'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":52},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":54},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == errorMessage.errormessages.invalidUserName","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":57}],"tags":[{"name":"@User_Update_NameWithSpecialCharacters_03","line":47},{"name":"@coreServices","line":47},{"name":"@regression","line":47},{"name":"@negative","line":47},{"name":"@updateProfile","line":47},{"name":"@eGovUser","line":47}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":557488,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:15.595 karate.env:  \n15:37:15.596 locale: en_IN \n15:37:15.596 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":149050955,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:15.749 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1263979,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":9377,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":12703,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6090,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":43890,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":45044,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":3535,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":2962,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":133543288,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":274820,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:15.748 status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":60,"name":"To verify the error message returned by API when an invalid emailid is passed","description":"","id":"to-verify-the-error-message-returned-by-api-when-an-invalid-emailid-is-passed","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":62},{"name":"set profilePayload.user.emailId = username","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":64},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":66},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == errorMessage.errormessages.invalidEmail","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":69}],"tags":[{"name":"@User_Update_InvalidEmail_04","line":59},{"name":"@coreServices","line":59},{"name":"@regression","line":59},{"name":"@negative","line":59},{"name":"@updateProfile","line":59},{"name":"@eGovUser","line":59}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":658205,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:15.755 karate.env:  \n15:37:15.756 locale: en_IN \n15:37:15.757 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":522237658,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:16.132 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1278941,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":10468,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":14404,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6230,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":58307,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":45842,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":5137,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":4549,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":147820316,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":199128,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:16.132 status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":72,"name":"To verify the error message returned by API when an invalid phone number is passed","description":"","id":"to-verify-the-error-message-returned-by-api-when-an-invalid-phone-number-is-passed","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":74},{"name":"set profilePayload.user.mobileNumber = randomMobileNumGen(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":76},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":78},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == errorMessage.errormessages.invalidPhoneNumber","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":81}],"tags":[{"name":"@User_Update_InvalidMobileNumber_05","line":71},{"name":"@coreServices","line":71},{"name":"@regression","line":71},{"name":"@negative","line":71},{"name":"@updateProfile","line":71},{"name":"@eGovUser","line":71}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":696619,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:16.140 karate.env:  \n15:37:16.140 locale: en_IN \n15:37:16.140 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":146113943,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 128, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:16.289 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 128, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":960455,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":8280,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":10167,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":4568,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":39754,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":30284,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":3366,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":2880,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":129866499,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":323692,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 128, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:16.289 status code was: 400, expected: 200, response time: 128, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":84,"name":"To verify the phone number is not get updated even though it is valid","description":"","id":"to-verify-the-phone-number-is-not-get-updated-even-though-it-is-valid","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":86},{"name":"set profilePayload.user.mobileNumber = randomMobileNo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":88},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@updateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":90},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":92},{"name":"assert hrmsResponseBody.Employees[0].user.mobileNumber != randomMobileNo","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":94}],"tags":[{"name":"@User_Update_RandomDigit_MobileNumber_06","line":83},{"name":"@coreServices","line":83},{"name":"@regression","line":83},{"name":"@negative","line":83},{"name":"@updateProfile","line":83},{"name":"@eGovUser","line":83}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":544030,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:16.301 karate.env:  \n15:37:16.301 locale: en_IN \n15:37:16.301 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":147847753,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 130, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:16.452 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 130, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":884924,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":7817,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":10387,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":4204,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":36598,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":29166,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":3054,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":2471,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":132281598,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":277073,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 130, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:16.451 status code was: 400, expected: 200, response time: 130, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":97,"name":"To verify the error message returned by API when an invalid gender is passed","description":"","id":"to-verify-the-error-message-returned-by-api-when-an-invalid-gender-is-passed","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99},{"name":"set profilePayload.user.gender = invalidGender","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":101},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":103},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == errorMessage.errormessages.invalidGender","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":106}],"tags":[{"name":"@User_Update_InvalidGender_07","line":96},{"name":"@coreServices","line":96},{"name":"@regression","line":96},{"name":"@negative","line":96},{"name":"@updateProfile","line":96},{"name":"@eGovUser","line":96}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":773629,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:16.459 karate.env:  \n15:37:16.459 locale: en_IN \n15:37:16.459 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":141011464,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 125, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:16.604 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 125, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1263298,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":8011,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":11018,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":5543,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":44036,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":37081,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":4181,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":3289,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":127166227,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":403290,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 125, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:16.603 status code was: 400, expected: 200, response time: 125, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":109,"name":"To verify the error message returned by API when tenant id passed as null","description":"","id":"to-verify-the-error-message-returned-by-api-when-tenant-id-passed-as-null","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":111},{"name":"set profilePayload.user.tenantId = null","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":113},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":115},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":118}],"tags":[{"name":"@User_Update_noTenantId_08","line":108},{"name":"@coreServices","line":108},{"name":"@regression","line":108},{"name":"@negative","line":108},{"name":"@updateProfile","line":108},{"name":"@eGovUser","line":108}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":484708,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:16.617 karate.env:  \n15:37:16.617 locale: en_IN \n15:37:16.617 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":157445409,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 140, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:16.779 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 140, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1267880,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":11337,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":14290,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":4697,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":89025,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":43896,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":4627,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":3814,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":142163535,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":245987,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 140, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:16.778 status code was: 400, expected: 200, response time: 140, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":121,"name":"To verify the error message returned by API when UUID passed as blank","description":"","id":"to-verify-the-error-message-returned-by-api-when-uuid-passed-as-blank","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":123},{"name":"set profilePayload.user.uuid = ''","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":125},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":127},{"name":"assert updatedUserprofileResponseBody.Errors[0].description == errorMessage.errormessages.invalidUUID","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":129}],"tags":[{"name":"@User_Update_noUUID_09","line":120},{"name":"@coreServices","line":120},{"name":"@regression","line":120},{"name":"@negative","line":120},{"name":"@updateProfile","line":120},{"name":"@eGovUser","line":120}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":539391,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:16.786 karate.env:  \n15:37:16.787 locale: en_IN \n15:37:16.787 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":143945168,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 123, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:16.933 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 123, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1138940,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":10240,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":13962,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6993,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":55495,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":46765,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":5329,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":5413,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":125483870,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":1795017,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 123, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:16.931 status code was: 400, expected: 200, response time: 123, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":132,"name":"To verify the error message returned by API when an invalid UUID passed","description":"","id":"to-verify-the-error-message-returned-by-api-when-an-invalid-uuid-passed","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":134},{"name":"set profilePayload.user.uuid = generateUUID()","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":136},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":138},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":141}],"tags":[{"name":"@User_Update_InvalidUUID_10","line":131},{"name":"@coreServices","line":131},{"name":"@regression","line":131},{"name":"@negative","line":131},{"name":"@updateProfile","line":131},{"name":"@eGovUser","line":131}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":5865857,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:16.949 karate.env:  \n15:37:16.950 locale: en_IN \n15:37:16.950 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":158357031,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 127, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:17.120 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 127, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":2314801,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":10729,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":13238,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":4239,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":50916,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":79272,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6514,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":3516,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":130670328,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":2781874,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 127, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:17.117 status code was: 400, expected: 200, response time: 127, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":144,"name":"To verify the error message returned by API when ID is removed","description":"","id":"to-verify-the-error-message-returned-by-api-when-id-is-removed","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":146},{"name":"remove profilePayload.user.id","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":148},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":150},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":153}],"tags":[{"name":"@User_Update_noID_11","line":143},{"name":"@coreServices","line":143},{"name":"@regression","line":143},{"name":"@negative","line":143},{"name":"@updateProfile","line":143},{"name":"@eGovUser","line":143}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":661745,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:17.160 karate.env:  \n15:37:17.160 locale: en_IN \n15:37:17.161 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":196974500,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 147, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:17.364 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 147, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":9764761,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":9623,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":13842,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":4851,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":53718,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":531367,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":15633,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":4114,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":158201225,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":233872,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 147, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:17.364 status code was: 400, expected: 200, response time: 147, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":156,"name":"To verify the error message returned by API when ID is invalid","description":"","id":"to-verify-the-error-message-returned-by-api-when-id-is-invalid","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":158},{"name":"set profilePayload.user.id = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":160},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":162},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":165}],"tags":[{"name":"@User_Update_InvalidID_12","line":155},{"name":"@coreServices","line":155},{"name":"@regression","line":155},{"name":"@negative","line":155},{"name":"@updateProfile","line":155},{"name":"@eGovUser","line":155}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":819736,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:17.375 karate.env:  \n15:37:17.375 locale: en_IN \n15:37:17.378 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":171857894,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 137, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:17.554 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 137, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1432380,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":11142,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":16326,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6939,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":63192,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":51353,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6484,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":4329,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":139390833,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":364970,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 137, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:17.553 status code was: 400, expected: 200, response time: 137, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def code = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"call read('..\/..\/business-services\/pretest\/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithMultipleEmployeeCodes')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def profilePayload = read('..\/..\/core-services\/requestPayload\/user\/update\/updateUser.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def errorMessage = read(\"..\/..\/core-services\/constants\/user.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def username = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def email = ranString(5)+'@auto.com'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12},{"name":"def city = tenantId.split(\".\")[0]","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":13},{"name":"def randomMobileNo = '9'+ randomMobileNumGen(9)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":14},{"name":"def invalidGender = randomNumber(3)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":15}]},{"line":168,"name":"To verify the max length of characters of username","description":"","id":"to-verify-the-max-length-of-characters-of-username","type":"scenario","keyword":"Scenario","steps":[{"name":"eval profilePayload.user = hrmsResponseBody.Employees[0].user","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":170},{"name":"set profilePayload.user.name = randomString(55)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":172},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserProfile')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":174},{"name":"assert updatedUserprofileResponseBody.Errors[0].message == errorMessage.errormessages.nameCharsSize","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":177}],"tags":[{"name":"@User_Update_NameWithMorethanMaxCharacters_13","line":167},{"name":"@coreServices","line":167},{"name":"@regression","line":167},{"name":"@negative","line":167},{"name":"@updateProfile","line":167},{"name":"@eGovUser","line":167}]}],"name":"com\/egov\/core-services\/tests\/userProfileUpdate.feature","description":"eGov_User - Update user profile tests","id":"egov-user---update-user-profile-tests","keyword":"Feature","uri":"com\/egov\/core-services\/tests\/userProfileUpdate.feature"}]