<testsuite failures="9"
           name="com/egov/core-services/tests/passwordUpdate.feature"
           skipped="0"
           tests="9"
           time="1.378847">
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify existing password is updating correctly"
             time="0.159293">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the invalid length password error"
             time="0.146838">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the error message returned by API when an invalid existing password provided"
             time="0.160067">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.existingPassword = 'Pas'+ ranString(2) .......... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the error message returned by API when tenantId field is removed"
             time="0.151186">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.existingPassword = 'Pas'+ ranString(2) .......... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.tenantId ..................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the error message returned by API for an invalid tenantId"
             time="0.138062">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.existingPassword = 'Pas'+ ranString(2) .......... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.tenantId ..................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.tenantId = ranString(5) ......................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPasswordUnAuthorized') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.authorizedError . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the error message returned by API when userType field is removed"
             time="0.137256">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.existingPassword = 'Pas'+ ranString(2) .......... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.tenantId ..................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.tenantId = ranString(5) ......................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPasswordUnAuthorized') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.type ......................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the error message returned by API when existingPassword field is removed"
             time="0.171882">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.existingPassword = 'Pas'+ ranString(2) .......... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.tenantId ..................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.tenantId = ranString(5) ......................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPasswordUnAuthorized') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.type ......................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.existingPassword ............................. skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the error message returned by API when newPassword field is removed"
             time="0.152902">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 122, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.existingPassword = 'Pas'+ ranString(2) .......... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.tenantId ..................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.tenantId = ranString(5) ......................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPasswordUnAuthorized') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.type ......................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.existingPassword ............................. skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 122, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.newPassword .................................. skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.passwordUpdate"
             name="To verify the error message returned by API when invalid type is provided"
             time="0.161362">
      <failure message="-unknown-:5 - &#xA;authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 138, url: https://qa.digit.org/user/oauth/token, response: {&#34;error_description&#34;:&#34;Account locked&#34;,&#34;error&#34;:&#34;invalid_request&#34;}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* assert updatedPasswordResponseBody.responseInfo.status == 200 ........... skipped
* set updatedUserPassword.existingPassword = newPassword .................. skipped
* set updatedUserPassword.newPassword = authPassword ...................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@updateUserPassword') . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.newPassword = 'Pas'+ ranString(2) ............... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.existingPassword = 'Pas'+ ranString(2) .......... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.tenantId ..................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.tenantId = ranString(5) ......................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPasswordUnAuthorized') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.type ......................................... skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.existingPassword ............................. skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 122, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* remove updatedUserPassword.newPassword .................................. skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: -unknown-:5 - 
authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 138, url: https://qa.digit.org/user/oauth/token, response: {"error_description":"Account locked","error":"invalid_request"}
	at ✽.* call read('../../common-services/pretests/authenticationToken.feature@authTokenCounterEmployee') (-unknown-:5)

* def errorMessage = read('../../core-services/constants/user.yaml') ...... skipped
* def genericError = read("../../common-services/constants/genericConstants.yaml") . skipped
* def existingPassword = counterEmployeePassword .......................... skipped
* def newPassword = 'Password@'+randomNumber(4) ........................... skipped
* def username = counterEmployeeUsername .................................. skipped
* def type = counterEmployeeType .......................................... skipped
* def updatedUserPassword = read('../../core-services/requestPayload/user/updatePassword/updatePassword.json') . skipped
* set updatedUserPassword.type = ranString(8) ............................. skipped
* call read('../../core-services/pretests/eGovUserUpdatePretest.feature@errorInUpdateUserPassword') . skipped
* assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException . skipped</failure>
   </testcase>
</testsuite>
