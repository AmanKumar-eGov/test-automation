<testsuite failures="2"
           name="com/egov/core-services/tests/eGovPdf.feature"
           skipped="0"
           tests="25"
           time="76.794496">
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify ptmutationcertificate application through API"
             time="0.638119">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify ptmutationcertificate application through API with invalid tenantID"
             time="0.187469">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify ptmutationcertificate application through API with invalid UUID"
             time="0.268488">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify ptmutationcertificate application through API with invalid status"
             time="0.244076">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify ptmutationcertificate application through API with invalid mutations"
             time="0.220747">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify ptmutationcertificate application through API without UUID"
             time="0.195802">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify Consolidated Receipt application"
             time="10.360508">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify Consolidated Receipt application with invalid consumer code"
             time="0.192124">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify Consolidated Receipt application with invalid tenantID"
             time="11.744927">
      <failure message="eGovPdf.feature:75 - &#xA;eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {&#34;ResponseInfo&#34;:null,&#34;Errors&#34;:[{&#34;code&#34;:&#34;ResourceNotFoundException&#34;,&#34;description&#34;:null,&#34;message&#34;:&#34;The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found&#34;,&#34;params&#34;:null}]}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify Consolidated Receipt application with invalid bussiness Service code"
             time="11.794001">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify Consolidated Receipt application withoout tenantID and consumer code"
             time="0.154552">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl renewal certification Application"
             time="11.851966">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl renewal certification Application without application number"
             time="0.186991">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl renewal certification Application with invalid application number"
             time="0.175991">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl renewal certification Application without renewal application number"
             time="7.942697">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl renewal certification Application without renewal application number"
             time="8.570056">
      <failure message="eGovPdf.feature:127 - &#xA;eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {&#34;ResponseInfo&#34;:null,&#34;Errors&#34;:[{&#34;code&#34;:&#34;CustomException&#34;,&#34;description&#34;:&#34;Not authorized to access this resource&#34;,&#34;message&#34;:&#34;Not authorized to access this resource&#34;,&#34;params&#34;:null}]}">* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped</failure>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl Receipt Application"
             time="8.545179">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl Receipt Application"
             time="0.16347">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl Receipt Application"
             time="0.733805">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptSuccessfully') . passed
* match ptreceiptResponseBody == '#present' ............................... passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl Receipt Application without UUID"
             time="0.149311">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptSuccessfully') . passed
* match ptreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptreceiptSearchParam = {"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError') . passed
* match ptreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.notMadForPT . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl Receipt Application with invalid tenantID"
             time="0.167381">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptSuccessfully') . passed
* match ptreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptreceiptSearchParam = {"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError') . passed
* match ptreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.notMadForPT . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def tenantId = randomString(8) .......................................... passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError1') . passed
* match ptreceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify tl Receipt Application with invalid UUID"
             time="0.16216">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptSuccessfully') . passed
* match ptreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptreceiptSearchParam = {"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError') . passed
* match ptreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.notMadForPT . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def tenantId = randomString(8) .......................................... passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError1') . passed
* match ptreceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = randomString(8) .............................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError2') . passed
* match ptreceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUUID . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify PTBill application"
             time="1.776065">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptSuccessfully') . passed
* match ptreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptreceiptSearchParam = {"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError') . passed
* match ptreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.notMadForPT . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def tenantId = randomString(8) .......................................... passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError1') . passed
* match ptreceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = randomString(8) .............................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError2') . passed
* match ptreceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptbillSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptBillSuccessfully') . passed
* match ptBillResponseBody == '#present' .................................. passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify PTBill application without passing UUID and tenantID"
             time="0.191368">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptSuccessfully') . passed
* match ptreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptreceiptSearchParam = {"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError') . passed
* match ptreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.notMadForPT . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def tenantId = randomString(8) .......................................... passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError1') . passed
* match ptreceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = randomString(8) .............................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError2') . passed
* match ptreceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptbillSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptBillSuccessfully') . passed
* match ptBillResponseBody == '#present' .................................. passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptbillSearchParam = {"bussinessService": '#(businessService)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptBillError') . passed
* match ptBillResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndUUID . passed</system-out>
   </testcase>
   <testcase classname="com.egov.core-services.tests.eGovPdf"
             name="Verify PTBill application without passing UUID and tenantID"
             time="0.177242">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateSuccessfully') . passed
* match ptmutationcertificateResponseBody == '#present' ................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tenantId = commonConstants.invalidParameters.invalidTenantId ........ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = randomString(8) ............................................ passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError1') . passed
* match ptmutationcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUser . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID1 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidstatus . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def UserId = eGovPdfConstants.users.UUID2 ............................... passed
* def ptmutationcertificateSearchParam = {"uuid":'#(UserId)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidMutation . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def ptmutationcertificateSearchParam = {"tenantId": '#(tenantId)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptMutationCertificateError2') . passed
* match ptmutationcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptSuccessfully') . passed
* match consolidatedReceiptResponseBody == '#present' ..................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def consumerCode = randomString(8) ...................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = businessService.split(".")[0] ..................... passed
* def tenantId = randomString(8) .......................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:75 - 
eGovPdfPreTest.feature:72 - status code was: 404, expected: 403, response time: 141, url: https://qa.digit.org/egov-pdf/download/PAYMENT/consolidatedreceipt?consumerCode=PB-PT-2021-08-10-019335&amp;bussinessService=PT&amp;tenantId=ebsvyiCQ, response: {"ResponseInfo":null,"Errors":[{"code":"ResourceNotFoundException","description":null,"message":"The resource - /egov-pdf/download/PAYMENT/consolidatedreceipt not found","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError1') (eGovPdf.feature:75)

* match consolidatedReceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/propertyServiceEndToEndFlow.feature@propertyCreateAsCounterEmployee') . passed
* def businessService = randomString(8) ................................... passed
* def consolidatedReceiptSearchParam = {"consumerCode":'#(consumerCode)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError') . passed
* match consolidatedReceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidConsumerNo . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def consolidatedReceiptSearchParam = {"bussinessService": '#(businessService)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@consolidatedreceiptError2') . passed
* match consolidatedReceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndConsu . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndSubmitForRenewalCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateSuccessfully') . passed
* match tlrenewalcertificateResponseBody == '#present' .................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlrenewalcertificateSearchParam = {"tenantId": '#(tenantId)'} ....... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutConsumerTenant . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def applicationNumber = randomString(8) ................................. passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError1') . passed
* match tlrenewalcertificateResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidApplication . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . passed
* match tlrenewalcertificateResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutRenewalNumber . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tenantId = randomString(8) .......................................... passed
* def tlrenewalcertificateSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') . failed

Stack Trace:
com.intuit.karate.exception.KarateException: eGovPdf.feature:127 - 
eGovPdfPreTest.feature:99 - status code was: 403, expected: 400, response time: 120, url: https://qa.digit.org/egov-pdf/download/TL/tlrenewalcertificate?applicationNumber=PB-TL-2021-08-10-012662&amp;tenantId=ZsvgIlnL, response: {"ResponseInfo":null,"Errors":[{"code":"CustomException","description":"Not authorized to access this resource","message":"Not authorized to access this resource","params":null}]}
	at ✽.* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlrenewalcertificateError') (eGovPdf.feature:127)

* match tlrenewalcertificateResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . skipped
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* call read('../../municipal-services/tests/tradeLicenseEndToEndFlow.feature@createTradeLicenseAndApproveCounterEmployee') . passed
* def applicationNumber = consumerCode .................................... passed
* def tlreceiptSearchParam = {"applicationNumber":'#(applicationNumber)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptSuccessfully') . passed
* match tlreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def tlreceiptSearchParam = {"tenantId": '#(tenantId)'} .................. passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@tlreceiptError') . passed
* match tlreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.invalidTlReceipt . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptSuccessfully') . passed
* match ptreceiptResponseBody == '#present' ............................... passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptreceiptSearchParam = {"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError') . passed
* match ptreceiptResponseBody.errorMessage == eGovPdfConstants.errorMessages.notMadForPT . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def tenantId = randomString(8) .......................................... passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError1') . passed
* match ptreceiptResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = randomString(8) .............................................. passed
* def ptreceiptSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptreceiptError2') . passed
* match ptreceiptResponseBody.Errors[0].message == eGovPdfConstants.errorMessages.invalidUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def ptbillSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptBillSuccessfully') . passed
* match ptBillResponseBody == '#present' .................................. passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def ptbillSearchParam = {"bussinessService": '#(businessService)'} ...... passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptBillError') . passed
* match ptBillResponseBody.errorMessage == eGovPdfConstants.errorMessages.withoutTenantAndUUID . passed
* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def tenantId = mdmsStateFireNocService.FireStations[0].baseTenantId ..... passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def eGovPdfConstants = read('../../core-services/constants/eGovPdf.yaml') . passed
* def UserId = eGovPdfConstants.users.UUID ................................ passed
* def businessService = businessService.split(".")[0] ..................... passed
* def uuid = eGovPdfConstants.users.UUID .................................. passed
* def tenantId = randomString(8) .......................................... passed
* def ptbillSearchParam = {"uuid":'#(uuid)',"bussinessService": '#(businessService)',"tenantId": '#(tenantId)'} . passed
* call read('../../core-services/pretests/eGovPdfPreTest.feature@ptBillError1') . passed
* match ptBillResponseBody.Errors[0].message == commonConstants.errorMessages.authorizedError . passed</system-out>
   </testcase>
</testsuite>
