[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":499616,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:09.112 karate.env:  \n15:37:09.112 locale: en_IN \n15:37:09.112 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":305110139,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 277, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:09.419 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 277, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":6138477,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":10837,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":12092,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6641,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":1026922,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":1021472,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":13366,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":10271,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":281166566,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":1084027,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 277, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:09.418 status code was: 400, expected: 200, response time: 277, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":15,"name":"To validate error message for invalid OTP","description":"","id":"to-validate-error-message-for-invalid-otp","type":"scenario","keyword":"Scenario","steps":[{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":17},{"name":"match updatedPasswordWithOutLogin.error.fields[0].message == errorMessage.errormessages.invalidOTP","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":19}],"tags":[{"name":"@Update_NoLogin_Password_InValidOTP_02","line":14},{"name":"@coreServices","line":14},{"name":"@regression","line":14},{"name":"@negative","line":14},{"name":"@userPasswordNoLogin","line":14},{"name":"@eGovUser","line":14}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":767463,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:09.430 karate.env:  \n15:37:09.430 locale: en_IN \n15:37:09.430 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":250871967,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 230, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:09.685 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 230, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":2543145,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":15409,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":22271,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":19767,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":301013,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":86888,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":11227,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":7622,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":233115215,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":369573,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 230, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:09.685 status code was: 400, expected: 200, response time: 230, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":22,"name":"To validate error message when otpSignal is missing","description":"","id":"to-validate-error-message-when-otpsignal-is-missing","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updateUserPasswordNoLogin.otpReference","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":24},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":26},{"name":"match updatedPasswordWithOutLogin['error'].message == errorMessage.errormessages.invalidOTP","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":28}],"tags":[{"name":"@Update_NoLogin_Password_NoOtpReference_03","line":21},{"name":"@coreServices","line":21},{"name":"@regression","line":21},{"name":"@negative","line":21},{"name":"@userPasswordNoLogin","line":21},{"name":"@eGovUser","line":21}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":1049719,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:09.698 karate.env:  \n15:37:09.699 locale: en_IN \n15:37:09.699 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":290454995,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 269, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:09.994 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 269, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1276422,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":11122,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":20892,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":9436,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":73969,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":56652,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6966,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":5884,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":272751161,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":464486,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 269, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:09.994 status code was: 400, expected: 200, response time: 269, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":31,"name":"To validate error message when newPassword is missing","description":"","id":"to-validate-error-message-when-newpassword-is-missing","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updateUserPasswordNoLogin.newPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":33},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":35},{"name":"match updatedPasswordWithOutLogin['error'].message == errorMessage.errormessages.invalidOTP","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":37}],"tags":[{"name":"@Update_NoLogin_Password_NoNewPassword_04","line":30},{"name":"@coreServices","line":30},{"name":"@regression","line":30},{"name":"@negative","line":30},{"name":"@userPasswordNoLogin","line":30},{"name":"@eGovUser","line":30}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":2031480,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:10.004 karate.env:  \n15:37:10.004 locale: en_IN \n15:37:10.004 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":246525167,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 228, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:10.256 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 228, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":956900,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":9187,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":13545,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6080,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":44147,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":52446,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":7836,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":6484,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":230701250,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":252461,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 228, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:10.255 status code was: 400, expected: 200, response time: 228, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Invalid login credentials\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":40,"name":"To validate error message when username is missing","description":"","id":"to-validate-error-message-when-username-is-missing","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updateUserPasswordNoLogin.userName","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":42},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":44},{"name":"match updatedPasswordWithOutLogin['error'].message == errorMessage.errormessages.invalidOTP","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":46}],"tags":[{"name":"@Update_NoLogin_Password_NoUserName_05","line":39},{"name":"@coreServices","line":39},{"name":"@regression","line":39},{"name":"@negative","line":39},{"name":"@userPasswordNoLogin","line":39},{"name":"@eGovUser","line":39}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":634550,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:10.261 karate.env:  \n15:37:10.262 locale: en_IN \n15:37:10.262 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":315407920,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 298, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:10.581 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 298, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1143958,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":9170,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":13077,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6633,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":59921,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":44620,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":5058,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":4240,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":300674176,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":371946,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 298, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:10.580 status code was: 400, expected: 200, response time: 298, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":49,"name":"To validate error message when tenantId is missing","description":"","id":"to-validate-error-message-when-tenantid-is-missing","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updateUserPasswordNoLogin.tenantId","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":51},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":53},{"name":"match updatedPasswordWithOutLogin['error'].message == errorMessage.errormessages.invalidOTP","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":55}],"tags":[{"name":"@Update_NoLogin_Password_NotenantId_06","line":48},{"name":"@coreServices","line":48},{"name":"@regression","line":48},{"name":"@negative","line":48},{"name":"@userPasswordNoLogin","line":48},{"name":"@eGovUser","line":48}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":697402,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:10.588 karate.env:  \n15:37:10.588 locale: en_IN \n15:37:10.588 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":144685612,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:10.736 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1041844,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":9416,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":15077,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":8197,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":59937,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":44472,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":5361,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":4890,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":134020166,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":289230,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:10.736 status code was: 400, expected: 200, response time: 131, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":58,"name":"To validate error message when type is missing","description":"","id":"to-validate-error-message-when-type-is-missing","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updateUserPasswordNoLogin.type","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":60},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":62},{"name":"match updatedPasswordWithOutLogin['error'].message == errorMessage.errormessages.invalidOTP","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":64}],"tags":[{"name":"@Update_NoLogin_Password_Notype_07","line":57},{"name":"@coreServices","line":57},{"name":"@regression","line":57},{"name":"@negative","line":57},{"name":"@userPasswordNoLogin","line":57},{"name":"@eGovUser","line":57}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":565280,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:10.746 karate.env:  \n15:37:10.746 locale: en_IN \n15:37:10.746 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":154457020,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:10.907 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1154495,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":10996,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":17514,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":8279,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":62964,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":50991,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6034,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":4874,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":142681585,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":321491,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:10.907 status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":67,"name":"To validate error message when userName is invalid","description":"","id":"to-validate-error-message-when-username-is-invalid","type":"scenario","keyword":"Scenario","steps":[{"name":"set updateUserPasswordNoLogin.userName = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":69},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":71},{"name":"match updatedPasswordWithOutLogin.Errors[0].code == errorMessage.errormessages.userNotFoundCode","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":73}],"tags":[{"name":"@Update_NoLogin_Password_InValidUserName_08","line":66},{"name":"@coreServices","line":66},{"name":"@regression","line":66},{"name":"@negative","line":66},{"name":"@userPasswordNoLogin","line":66},{"name":"@eGovUser","line":66}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":740441,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:10.919 karate.env:  \n15:37:10.923 locale: en_IN \n15:37:10.924 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":173824788,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:11.103 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1941084,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":19373,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":24442,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":144729,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":272752,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":77161,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":8769,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":6153,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":149808457,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":315200,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:11.103 status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def otpReference = randomNumber(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def userName = authUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def type = authUserType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updateUserPasswordNoLogin = read('..\/..\/core-services\/requestPayload\/user\/updatePasswordNoLogin\/updatePasswordNoLogin.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":76,"name":"To validate error message when tenantId is invalid","description":"","id":"to-validate-error-message-when-tenantid-is-invalid","type":"scenario","keyword":"Scenario","steps":[{"name":"set updateUserPasswordNoLogin.tenantId = ranString(10)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":78},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdatePasswordNoLogin')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":80},{"name":"match updatedPasswordWithOutLogin.Errors[0].code == errorMessage.errormessages.userNotFoundCode","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":83}],"tags":[{"name":"@Update_NoLogin_Password_InValidtenantId_09","line":75},{"name":"@coreServices","line":75},{"name":"@regression","line":75},{"name":"@negative","line":75},{"name":"@userPasswordNoLogin","line":75},{"name":"@eGovUser","line":75}]}],"name":"com\/egov\/core-services\/tests\/passwordNologinUpdate.feature","description":"eGov_User - Update password no login tests","id":"egov-user---update-password-no-login-tests","keyword":"Feature","uri":"com\/egov\/core-services\/tests\/passwordNologinUpdate.feature"}]