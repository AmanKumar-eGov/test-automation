[{"line":1,"elements":[{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":719767,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:13.542 karate.env:  \n15:37:13.542 locale: en_IN \n15:37:13.542 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":158573582,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:13.705 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":8384055,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":15080,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":18695,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":10165,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":2582774,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":1573837,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":17367,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":8831,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":127343587,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":298138,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 121, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:13.704 status code was: 400, expected: 200, response time: 121, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":15,"name":"To verify existing password is updating correctly","description":"","id":"to-verify-existing-password-is-updating-correctly","type":"scenario","keyword":"Scenario","steps":[{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@updateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":17},{"name":"assert updatedPasswordResponseBody.responseInfo.status == 200","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":19},{"name":"set updatedUserPassword.existingPassword = newPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":21},{"name":"set updatedUserPassword.newPassword = authPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":23},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@updateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":25}],"tags":[{"name":"@Update_Password_ValidExistingPassword_validNewPassword_01","line":14},{"name":"@Update_Password_SameAsExistingPassword_10","line":14},{"name":"@coreServices","line":14},{"name":"@regression","line":14},{"name":"@positive","line":14},{"name":"@userPassword","line":14},{"name":"@eGovUser","line":14}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":1490612,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:13.717 karate.env:  \n15:37:13.717 locale: en_IN \n15:37:13.719 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":145347097,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:13.874 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1897750,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":10130,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":14010,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":5839,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":48702,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":37491,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6000,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":3926,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":122812838,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":272036,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:13.873 status code was: 400, expected: 200, response time: 120, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":28,"name":"To verify the invalid length password error","description":"","id":"to-verify-the-invalid-length-password-error","type":"scenario","keyword":"Scenario","steps":[{"name":"set updatedUserPassword.newPassword = 'Pas'+ ranString(2)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":30},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":32},{"name":"assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.invalidPasswordLengthCode","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":34},{"name":"assert updatedPasswordResponseBody.Errors[0].message == errorMessage.errormessages.invalidPasswordMessage","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":35}],"tags":[{"name":"@Update_Password_ValidExistingPassword_InvalidNewPassword_02","line":27},{"name":"@coreServices","line":27},{"name":"@regression","line":27},{"name":"@negative","line":27},{"name":"@userPassword","line":27},{"name":"@eGovUser","line":27}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":568031,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:13.881 karate.env:  \n15:37:13.881 locale: en_IN \n15:37:13.881 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":159498741,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:14.044 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":2445002,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":12746,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":15579,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":8721,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":69785,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":54383,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6781,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":5513,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":147160313,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":488427,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:14.043 status code was: 400, expected: 200, response time: 145, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":38,"name":"To verify the error message returned by API when an invalid existing password provided","description":"","id":"to-verify-the-error-message-returned-by-api-when-an-invalid-existing-password-provided","type":"scenario","keyword":"Scenario","steps":[{"name":"set updatedUserPassword.existingPassword = 'Pas'+ ranString(2)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":40},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":42},{"name":"assert updatedPasswordResponseBody.Errors[0].code == errorMessage.errormessages.passwordMismatchCode","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":44},{"name":"assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":45}],"tags":[{"name":"@Update_Password_InValidExistingPassword_validNewPassword_03","line":37},{"name":"@coreServices","line":37},{"name":"@regression","line":37},{"name":"@negative","line":37},{"name":"@userPassword","line":37},{"name":"@eGovUser","line":37}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":718502,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:14.054 karate.env:  \n15:37:14.055 locale: en_IN \n15:37:14.055 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":150467860,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:14.209 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":866947,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":8653,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":11171,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":5310,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":40949,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":32373,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":4129,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":3672,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":137794722,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":699363,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 136, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:14.208 status code was: 400, expected: 200, response time: 136, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":48,"name":"To verify the error message returned by API when tenantId field is removed","description":"","id":"to-verify-the-error-message-returned-by-api-when-tenantid-field-is-removed","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updatedUserPassword.tenantId","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":50},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":52},{"name":"assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":54}],"tags":[{"name":"@Update_Password_notenantId_04","line":47},{"name":"@coreServices","line":47},{"name":"@regression","line":47},{"name":"@negative","line":47},{"name":"@userPassword","line":47},{"name":"@eGovUser","line":47}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":609134,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:14.219 karate.env:  \n15:37:14.219 locale: en_IN \n15:37:14.220 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":137453070,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:14.359 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":2267483,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":12390,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":14804,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":10831,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":71169,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":44824,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":396449,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":10141,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":119199024,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":299977,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 116, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:14.357 status code was: 400, expected: 200, response time: 116, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":57,"name":"To verify the error message returned by API for an invalid tenantId","description":"","id":"to-verify-the-error-message-returned-by-api-for-an-invalid-tenantid","type":"scenario","keyword":"Scenario","steps":[{"name":"set updatedUserPassword.tenantId = ranString(5)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":59},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPasswordUnAuthorized')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":61},{"name":"assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.authorizedError","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":63}],"tags":[{"name":"@Update_Password_InValidtenantId_05","line":56},{"name":"@coreServices","line":56},{"name":"@regression","line":56},{"name":"@negative","line":56},{"name":"@userPassword","line":56},{"name":"@eGovUser","line":56}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":570723,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:14.371 karate.env:  \n15:37:14.371 locale: en_IN \n15:37:14.371 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":136685118,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:14.512 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":791023,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":30464,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":10471,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":3763,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":37956,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":28421,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":3270,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":2464,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":122005128,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":478975,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:14.509 status code was: 400, expected: 200, response time: 119, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":66,"name":"To verify the error message returned by API when userType field is removed","description":"","id":"to-verify-the-error-message-returned-by-api-when-usertype-field-is-removed","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updatedUserPassword.type","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":68},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":70},{"name":"assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":72}],"tags":[{"name":"@Update_Password_noType_06","line":65},{"name":"@coreServices","line":65},{"name":"@regression","line":65},{"name":"@negative","line":65},{"name":"@userPassword","line":65},{"name":"@eGovUser","line":65}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":515541,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:14.521 karate.env:  \n15:37:14.521 locale: en_IN \n15:37:14.521 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":171366148,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:14.694 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1311517,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":9353,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":14571,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":6636,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":63249,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":48809,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":6171,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":4976,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":142823696,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":345100,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:14.692 status code was: 400, expected: 200, response time: 141, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":75,"name":"To verify the error message returned by API when existingPassword field is removed","description":"","id":"to-verify-the-error-message-returned-by-api-when-existingpassword-field-is-removed","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updatedUserPassword.existingPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":77},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":79},{"name":"assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":81}],"tags":[{"name":"@Update_Password_noExistingPassword_07","line":74},{"name":"@coreServices","line":74},{"name":"@regression","line":74},{"name":"@negative","line":74},{"name":"@userPassword","line":74},{"name":"@eGovUser","line":74}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":1115671,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:14.704 karate.env:  \n15:37:14.704 locale: en_IN \n15:37:14.706 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":151785926,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 122, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:14.862 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 122, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":8947566,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":20861,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":30430,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":14591,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":289883,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":194211,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":15221,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":9136,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":125602185,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":265989,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 122, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:14.862 status code was: 400, expected: 200, response time: 122, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":84,"name":"To verify the error message returned by API when newPassword field is removed","description":"","id":"to-verify-the-error-message-returned-by-api-when-newpassword-field-is-removed","type":"scenario","keyword":"Scenario","steps":[{"name":"remove updatedUserPassword.newPassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":86},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":88},{"name":"assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":90}],"tags":[{"name":"@Update_Password_noNewPassword_08","line":83},{"name":"@coreServices","line":83},{"name":"@regression","line":83},{"name":"@negative","line":83},{"name":"@userPassword","line":83},{"name":"@eGovUser","line":83}]},{"line":3,"name":"","description":"","type":"background","keyword":"Background","steps":[{"name":"def jsUtils = read('classpath:com\/egov\/utils\/jsUtils.js')","result":{"duration":1758826,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":4,"doc_string":{"content_type":"","value":"15:37:14.873 karate.env:  \n15:37:14.874 locale: en_IN \n15:37:14.874 tenantId: pb.amritsar","line":4}},{"name":"call read('..\/..\/common-services\/pretests\/authenticationToken.feature@authTokenCounterEmployee')","result":{"duration":159603039,"error_message":"com.intuit.karate.exception.KarateException: -unknown-:5 - \nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 138, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":5,"doc_string":{"content_type":"","value":"15:37:15.040 feature call failed: classpath:com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature\narg: null\nauthenticationToken.feature:88 - status code was: 400, expected: 200, response time: 138, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":5}},{"name":"com\/egov\/core-services\/tests\/..\/..\/common-services\/pretests\/authenticationToken.feature","result":{"duration":0,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"","line":5},{"name":"configure headers = read('classpath:com\/egov\/utils\/oauthTokenHeader.js')","result":{"duration":1222432,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":4},{"name":"url authTokenUrl","result":{"duration":9726,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> Given","line":80},{"name":"form field username = counterEmployeeUsername","result":{"duration":14069,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":81},{"name":"form field password = counterEmployeePassword","result":{"duration":14393,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":82},{"name":"form field grant_type = 'password'","result":{"duration":48274,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":83},{"name":"form field scope = 'read'","result":{"duration":443843,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":84},{"name":"form field tenantId = tenantId","result":{"duration":15329,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":85},{"name":"form field userType = counterEmployeeType","result":{"duration":7487,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":86},{"name":"method post","result":{"duration":142167331,"status":"passed"},"match":{"location":"karate","arguments":[]},"keyword":"> When","line":87},{"name":"status 200","result":{"duration":362965,"error_message":"com.intuit.karate.exception.KarateException: authenticationToken.feature:88 - status code was: 400, expected: 200, response time: 138, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","status":"failed"},"match":{"location":"karate","arguments":[]},"keyword":"> Then","line":88,"doc_string":{"content_type":"","value":"15:37:15.039 status code was: 400, expected: 200, response time: 138, url: https:\/\/qa.digit.org\/user\/oauth\/token, response: {\"error_description\":\"Account locked\",\"error\":\"invalid_request\"}","line":88}},{"name":"def authResponseBody = response","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":89},{"name":"def authResponseHeader = responseHeaders","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":90},{"name":"def authToken = authResponseBody.access_token","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> And","line":91},{"name":"match authResponseBody.access_token == '#present'","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"> *","line":93},{"name":"def errorMessage = read('..\/..\/core-services\/constants\/user.yaml')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":6},{"name":"def genericError = read(\"..\/..\/common-services\/constants\/genericConstants.yaml\")","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":7},{"name":"def existingPassword = counterEmployeePassword","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":8},{"name":"def newPassword = 'Password@'+randomNumber(4)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":9},{"name":"def username = counterEmployeeUsername","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":10},{"name":"def type = counterEmployeeType","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":11},{"name":"def updatedUserPassword = read('..\/..\/core-services\/requestPayload\/user\/updatePassword\/updatePassword.json')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":12}]},{"line":93,"name":"To verify the error message returned by API when invalid type is provided","description":"","id":"to-verify-the-error-message-returned-by-api-when-invalid-type-is-provided","type":"scenario","keyword":"Scenario","steps":[{"name":"set updatedUserPassword.type = ranString(8)","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":95},{"name":"call read('..\/..\/core-services\/pretests\/eGovUserUpdatePretest.feature@errorInUpdateUserPassword')","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":97},{"name":"assert updatedPasswordResponseBody.Errors[0].message == genericError.errorMessages.unhandledException","result":{"duration":0,"status":"skipped"},"match":{"location":"karate","arguments":[]},"keyword":"*","line":99}],"tags":[{"name":"@Update_Password_InvalidType_09","line":92},{"name":"@coreServices","line":92},{"name":"@regression","line":92},{"name":"@negative","line":92},{"name":"@userPassword","line":92},{"name":"@eGovUser","line":92}]}],"name":"com\/egov\/core-services\/tests\/passwordUpdate.feature","description":"eGov_User - This feature is to test Update user's password scenarios","id":"egov-user---this-feature-is-to-test-update-user's-password-scenarios","keyword":"Feature","uri":"com\/egov\/core-services\/tests\/passwordUpdate.feature"}]