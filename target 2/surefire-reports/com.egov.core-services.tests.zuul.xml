<testsuite failures="0"
           name="com/egov/core-services/tests/zuul.feature"
           skipped="0"
           tests="1"
           time="1.514827">
   <testcase classname="com.egov.core-services.tests.zuul"
             name="Verify the user is able to access to particular resources"
             time="1.514827">
      <system-out>* def jsUtils = read('classpath:com/egov/utils/jsUtils.js') ............... passed
* call read('../../common-services/pretests/egovMdmsPretest.feature') ..... passed
* def hrmsConstants = read('../../business-services/constants/egov-hrms.yaml') . passed
* def commonConstants = read('../../common-services/constants/genericConstants.yaml') . passed
* def apportionConstants = read('../../business-services/constants/apportionService.yaml') . passed
* def today = getCurrentEpochTime() ....................................... passed
* def tomorrow = getTomorrowEpochTime() ................................... passed
* def name = 'AUTOEMPLOYEE' + randomString(6) ............................. passed
* def mobileNumber = '78' + randomMobileNumGen(8) ......................... passed
* def email = randomString(10) + '@' + randomString(5) + '.com' ........... passed
* def employeeStatus = mdmsStateEgovHrms.EmployeeStatus[0].code ........... passed
* def dob = 635404414000 + '' ............................................. passed
* def gender = commonConstants.parameters.gender[randomNumber(commonConstants.parameters.gender.length)] . passed
* def fatherOrHusbandName = 'AUTOEMPFATHER' + randomString(6) ............. passed
* def employeeType = mdmsStateEgovHrms.EmployeeType[0].code ............... passed
* def hierarchy = mdmsCityEgovLocation.TenantBoundary[0].hierarchyType.code . passed
* def boundaryType = mdmsCityEgovLocation.TenantBoundary[0].boundary.label . passed
* def boundary = tenantId ................................................. passed
* def department = mdmsStatecommonMasters.Department[0].code .............. passed
* def designation = mdmsStatecommonMasters.Designation[0].code ............ passed
* def isCurrentAssignment = true .......................................... passed
* def fromDate = today .................................................... passed
* def dateOfAppointment = today ........................................... passed
* def toDate = null ....................................................... passed
* call read('../../business-services/pretest/egovHrmsPretest.feature@searchEmployeeSuccessfullyWithoutEmployeeCodes') . passed
* def hierarchyTypeCode = commonConstants.parameters.hierarchyTypeCode .... passed
* def boundaryType = commonConstants.parameters.boundaryType .............. passed
* call read('../../core-services/pretests/location.feature@searchLocationSuccessfully') . passed
* def localityCode = searchLocationResponseBody.TenantBoundary[0].boundary[0].code . passed
* def areaCode = searchLocationResponseBody.TenantBoundary[0].boundary[0].area . passed
* def localityName = searchLocationResponseBody.TenantBoundary[0].boundary[0].name + ', ' + cityCode . passed
* def financialYear = commonConstants.parameters.financialYear ............ passed
* def assessmentDate = getPastEpochDate(1) ................................ passed
* def source = commonConstants.parameters.source .......................... passed
* def channel = commonConstants.parameters.channel ........................ passed
* def relationship = commonConstants.parameters.relationship[randomNumber(commonConstants.parameters.relationship.length)] . passed
* configure headers = read('classpath:com/egov/utils/websCommonHeaders.js') . passed
* def cityName = karate.jsonPath(mdmsStatetenant, "$.tenants[?(@.code=='" + tenantId + "')].name")[0] . passed
* def OccupancyType = mdmsStatePropertyTax.OccupancyType[1].code .......... passed
* def UsageCategory = mdmsStatePropertyTax.UsageCategory[0].code .......... passed
* def builtUpArea = 2000 .................................................. passed
* def UsageCategoryMajor = mdmsStatePropertyTax.UsageCategoryMajor[0].code . passed
* def landArea = 800 ...................................................... passed
* def PropertyType = mdmsStatePropertyTax.PropertyType[3].code ............ passed
* def noOfFloors = 1 ...................................................... passed
* def OwnerShipCategory = mdmsStatePropertyTax.OwnerShipCategory[3].code .. passed
* def name = randomString(10) ............................................. passed
* def mobileNumber = '78' + randomMobileNumGen(8) ......................... passed
* def fatherOrHusbandName = randomString(10) .............................. passed
* def relationship = commonConstants.parameters.relationship[randomNumber(commonConstants.parameters.relationship.length)] . passed
* def OwnerType = mdmsStatePropertyTax.OwnerType[5].code .................. passed
* def gender = commonConstants.parameters.gender[randomNumber(commonConstants.parameters.gender.length)] . passed
* def isCorrespondenceAddress = true ...................................... passed
* def source = commonConstants.parameters.source .......................... passed
* def channel = commonConstants.parameters.channel ........................ passed
* def addressProofDocumentType0 = mdmsStatePropertyTax.Documents[0].dropdownData[0].code . passed
* def addressProofDocumentType1 = mdmsStatePropertyTax.Documents[1].dropdownData[0].code . passed
* def addressProofDocumentType2 = mdmsStatePropertyTax.Documents[2].dropdownData[0].code . passed
* def addressProofDocumentType3 = mdmsStatePropertyTax.Documents[3].dropdownData[0].code . passed
* def addressProofDocumentType4 = mdmsStatePropertyTax.Documents[4].dropdownData[0].code . passed
* def creationReason = commonConstants.parameters.creationReason .......... passed
* def businessService = mdmsStatePropertyTax.PTWorkflow[1].businessService . passed
* def propertyServicesConstants = read('../../municipal-services/constants/propertyServices.yaml') . passed
* call read('../../municipal-services/pretests/propertyServicesPretest.feature@createPropertySuccessfully') . passed
* match propertyServiceResponseBody.Properties[0].id == "#present" ........ passed
* match propertyServiceResponseBody.Properties[0].propertyId == "#present" . passed
* match propertyServiceResponseBody.Properties[0].status == "INWORKFLOW" .. passed
* match propertyServiceResponseBody.Properties[0].tenantId == tenantId .... passed</system-out>
   </testcase>
</testsuite>
